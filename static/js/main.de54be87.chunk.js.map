{"version":3,"sources":["Header.js","Card.js","firebase.js","Brain.js","GameCards.js","BuildSummary.js","AdvertBuild.js","Home.js","BuildCard.js","Part.js","BuildElab.js","Build.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Computer","IconButton","EmojiFlags","Brightness4Outlined","Card","img","name","src","alt","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Brain","id","collection","useState","build","setBuild","useEffect","doc","get","then","exists","data","console","log","catch","error","GameCards","games","carouselSettings","dots","infinite","speed","slidesToShow","slidesToScroll","window","innerWidth","warzone","fortnite","cpSSeven","gtaFive","csgo","BuildSummary","docId","undefined","case","size","color","details","benchmarks","cinebench","threeDMarkTSpy","cpu","gpu","AdvertBuild","slidesNum","setSlidesNum","to","style","textDecoration","Home","BuildCard","Part","part","price","detail2","detail1","company","title1","title2","link","Button","href","BuildElab","buildId","setBuildId","cores","smt","clocks","mbd","sataports","ramslots","dram","config","ssd","capacity","type","vram","bus","aib","psu","wattage","rating","Build","onClick","App","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.de54be87.chunk.js","sourcesContent":["import { IconButton } from \"@material-ui/core\";\nimport { Brightness4Outlined, EmojiFlags, Computer } from \"@material-ui/icons\";\nimport React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <div className=\"header__body\">\n        <div className=\"header__left\">\n          <div className=\"header__logo\">\n            <span>\n              <Computer />\n            </span>\n            <h1>\n              BUILD<span> ME </span> PC\n            </h1>\n          </div>\n        </div>\n        <div className=\"header__right\">\n          <IconButton>\n            <EmojiFlags />\n          </IconButton>\n          <IconButton>\n            <Brightness4Outlined />\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction Card({ img, name }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card__body\">\r\n        <img src={img} alt={name} className=\"card__image\"/>\r\n      </div>\r\n      <div className=\"card__title\">\r\n        <h3>{name}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCBUbwznvDbs1jIGcXAjhWOKtTjup36RRY\",\n  authDomain: \"build-me-pc-test.firebaseapp.com\",\n  databaseURL: \"https://build-me-pc-test.firebaseio.com\",\n  projectId: \"build-me-pc-test\",\n  storageBucket: \"build-me-pc-test.appspot.com\",\n  messagingSenderId: \"885602581204\",\n  appId: \"1:885602581204:web:f9032a4bfdccd9c7301941\",\n  measurementId: \"G-W1BPV5VSG5\",\n};\n\nconst firebasedApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebasedApp.firestore();\n\nexport default db;\n","import { useState, useEffect } from \"react\";\r\nimport db from \"./firebase\";\r\n\r\nfunction Brain(id = \"test\", collection = \"test\") {\r\n  const [build, setBuild] = useState({});\r\n  useEffect(() => {\r\n    db.collection(collection)\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          setBuild(doc.data());\r\n        } else {\r\n          console.log(\"No such document\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting document: \", error);\r\n      });\r\n  }, [id, collection]);\r\n  return build;\r\n}\r\n\r\nexport default Brain;\r\n","import React from \"react\";\r\nimport \"./GameCards.css\";\r\nimport Card from \"./Card\";\r\nimport Brain from \"./Brain\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nfunction GameCards() {\r\n  const games = Brain(\"games\", \"games\");\r\n  var carouselSettings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 300,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n  if (window.innerWidth <= 430) {\r\n    return (\r\n      <div className=\"gamecards\">\r\n        <Slider {...carouselSettings}>\r\n          <Card img={games.warzone?.img} name={games.warzone?.name} />\r\n          <Card img={games.fortnite?.img} name={games.fortnite?.name} />\r\n          <Card img={games.cpSSeven?.img} name={games.cpSSeven?.name} />\r\n          <Card img={games.gtaFive?.img} name={games.gtaFive?.name} />\r\n          <Card img={games.csgo?.img} name={games.csgo?.name} />\r\n        </Slider>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"gamecards\">\r\n      <Card img={games.warzone?.img} name={games.warzone?.name} />\r\n      <Card img={games.fortnite?.img} name={games.fortnite?.name} />\r\n      <Card img={games.cpSSeven?.img} name={games.cpSSeven?.name} />\r\n      <Card img={games.gtaFive?.img} name={games.gtaFive?.name} />\r\n      <Card img={games.csgo?.img} name={games.csgo?.name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameCards;\r\n","import React from \"react\";\r\nimport \"./BuildSummary.css\";\r\nimport Brain from \"./Brain\";\r\nimport { ScaleLoader } from \"react-spinners\";\r\n\r\nfunction BuildSummary({ docId }) {\r\n  const build = Brain(docId, \"builds\");\r\n  if (build.case?.img === undefined) {\r\n    return (\r\n      <div className=\"buildsummary buildsummary__loading\">\r\n        <ScaleLoader size={250} color={\"#FF6A82\"} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"buildsummary\">\r\n      <div className=\"buildsummary__details\">\r\n        <div className=\"buildsummary__text\">\r\n          <h1>{build.details?.name}</h1>\r\n          <div className=\"buildsummary__benchmarks\">\r\n            <h4>\r\n              Cinebench: <span>{build.benchmarks?.cinebench}</span>\r\n            </h4>\r\n            <h4>\r\n              3D Mark: <span>{build.benchmarks?.threeDMarkTSpy}</span>\r\n            </h4>\r\n          </div>\r\n          <div className=\"buildsummary__price\">\r\n            <h3>~$1000</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"buildsummary__loadBars\">\r\n          <h3>Warzone</h3>\r\n          <h3>Fortnite</h3>\r\n          <h3>GTA V</h3>\r\n          <h3>CyberPunk 2077</h3>\r\n          <h3>CS:GO</h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"buildsummary__image\">\r\n        <img src={build.case?.img} alt=\"\" className=\"buildsummary__case\" />\r\n        <div className=\"buildsummary__partsImg\">\r\n          <img src={build.cpu?.img} alt=\"\" />\r\n          <img src={build.gpu?.img} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BuildSummary;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./AdvertBuild.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BuildSummary from \"./BuildSummary\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nfunction AdvertBuild() {\r\n  const [slidesNum, setSlidesNum] = useState(2);\r\n  console.log(window.innerWidth);\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 1660) {\r\n      setSlidesNum(1);\r\n    }\r\n  }, [slidesNum]);\r\n  var carouselSettings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: slidesNum,\r\n    slidesToScroll: 1,\r\n  };\r\n  return (\r\n    <div className=\"advertbuild\">\r\n      <div className=\"advertbuild__title\">\r\n        <Link to=\"/build\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n          <h1>\r\n            Featured <span>Builds</span>\r\n          </h1>\r\n          <h4>\r\n            Here are some <span>builds</span> which we recommend irrespective of\r\n            any parameters. <br />\r\n            These are one of the best <span>value</span> options in the market\r\n            as of now\r\n          </h4>\r\n        </Link>\r\n      </div>\r\n      <div className=\"advertbuild__summary\">\r\n        <Slider {...carouselSettings}>\r\n          <BuildSummary docId=\"value\" />\r\n          <BuildSummary docId=\"valueIntel\" />\r\n          <BuildSummary docId=\"streaming\" />\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdvertBuild;\r\n","import React from \"react\";\nimport \"./Home.css\";\nimport Header from \"./Header\";\nimport GameCards from \"./GameCards\";\nimport AdvertBuild from \"./AdvertBuild\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"home__header\">\n        <Header />\n      </div>\n      <div className=\"home__body\">\n        <div className=\"home__text\">\n          <h1>\n            Get <span>Game</span> Recomendations\n          </h1>\n          <h4>\n            Plan your next <span>gaming</span> build according to your target\n            game details and quality. <br /> Use our spec estimator to get a\n            list of recommended parts for your <span>gaming/streaming </span>\n            build\n          </h4>\n        </div>\n        <GameCards />\n        <AdvertBuild />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\r\nimport \"./BuildCard.css\";\r\nimport Brain from \"./Brain\";\r\nimport { ScaleLoader } from \"react-spinners\";\r\n\r\nfunction BuildCard({ docId }) {\r\n  const build = Brain(docId, \"builds\");\r\n  if (build.case?.img === undefined) {\r\n    return (\r\n      <div className=\"buildcard buildcard__loading\">\r\n        <ScaleLoader size={250} color={\"#FF6A82\"} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"buildcard\">\r\n      <div className=\"buildcard__title\">\r\n        <h1>{build.details?.name}</h1>\r\n      </div>\r\n      <div className=\"buildcard__image\">\r\n        <img src={build.case?.img} alt=\"\" className=\"buildcard__case\" />\r\n        <div className=\"buildcard__partsImg\">\r\n          <img src={build.cpu?.img} alt=\"\" />\r\n          <img src={build.gpu?.img} alt=\"\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"buildcard__price\">\r\n        <h3>~$1000</h3>\r\n      </div>\r\n      <div className=\"buildcard__benchmarks\">\r\n        <h4>{`Cinebench: ${build.benchmarks?.cinebench}`}</h4>\r\n        <h4>{`3D Mark: ${build.benchmarks?.threeDMarkTSpy}`}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BuildCard;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ScaleLoader } from \"react-spinners\";\r\nimport \"./Part.css\";\r\n\r\nfunction Part({\r\n  part,\r\n  name,\r\n  img,\r\n  price,\r\n  detail2,\r\n  detail1,\r\n  company,\r\n  title1,\r\n  title2,\r\n  link,\r\n}) {\r\n  if (name === undefined) {\r\n    return (\r\n      <div className=\"part part__loading\">\r\n        <ScaleLoader size={250} color={\"#FF6A82\"} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"part\">\r\n      <div className=\"part__title\">\r\n        <h3>{part}</h3>\r\n        <div className=\"part__line\">{\"\"}</div>\r\n      </div>\r\n      <div className=\"part__body\">\r\n        <img src={img} alt=\"\" className=\"part__image\" />\r\n        <h3>{name}</h3>\r\n      </div>\r\n      <div className=\"part__details\">\r\n        <div className=\"part__price\">\r\n          <span>Price: </span>\r\n          <p>{price}</p>\r\n        </div>\r\n        <div className=\"part__groupOne\">\r\n          <span>{title1}</span>\r\n          <p>{detail1}</p>\r\n        </div>\r\n        <div className=\"part__groupTwo\">\r\n          <span>{title2}</span>\r\n          <p>{detail2}</p>\r\n        </div>\r\n        <div className=\"part__company\">\r\n          <span>Company: </span>\r\n          <p>{company}</p>\r\n        </div>\r\n        <Button href={link} color=\"primary\" className=\"part__buyBtn\">\r\n          BUY\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Part;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./BuildElab.css\";\r\nimport Part from \"./Part\";\r\nimport Brain from \"./Brain\";\r\n\r\nfunction BuildElab({ id }) {\r\n  const [buildId, setBuildId] = useState(id);\r\n  let build = Brain(buildId, \"builds\");\r\n  useEffect(() => {\r\n    setBuildId(id);\r\n  }, [id]);\r\n    return (\r\n    <div className=\"buildelab\">\r\n      <div className=\"buildelab__titles\">\r\n        <h1>{build.details?.name}</h1>\r\n        <div className=\"buildelab__scores\">\r\n          <h2>Scores</h2>\r\n          <h3>\r\n            Cinebench: <span>{build.benchmarks?.cinebench}</span>\r\n          </h3>\r\n          <h3>\r\n            3D Mark(Time Spy): <span>{build.benchmarks?.threeDMarkTSpy}</span>\r\n          </h3>\r\n        </div>\r\n        <h2>Part List</h2>\r\n      </div>\r\n      <div className=\"buildelab__parts\">\r\n        <Part\r\n          part=\"CPU\"\r\n          img={build.cpu?.img}\r\n          name={build.cpu?.name}\r\n          title1=\"Compute:\"\r\n          detail1={`${build.cpu?.cores}C/${\r\n            build.cpu?.smt ? build.cpu?.cores * 2 : build.cpu?.cores\r\n          }T`}\r\n          title2=\"Clockspeed:\"\r\n          detail2={`${build.cpu?.clocks} GHz`}\r\n          link={build.cpu?.link}\r\n          company={build.cpu?.company}\r\n          price={build.cpu?.price}\r\n        />\r\n        <Part\r\n          part=\"Motherboard\"\r\n          name={build.mbd?.name}\r\n          title1=\"Sata Ports:\"\r\n          detail1={build.mbd?.sataports}\r\n          title2=\"Ram Slots:\"\r\n          detail2={build.mbd?.ramslots}\r\n          price={build.mbd?.price}\r\n          link={build.mbd?.link}\r\n          company={build.mbd?.company}\r\n          img={build.mbd?.img}\r\n        />\r\n        <Part\r\n          part=\"RAM\"\r\n          name={build.dram?.name}\r\n          title1=\"Size:\"\r\n          detail1={`${build.dram?.size} GB (${build.dram?.config})`}\r\n          title2=\"Speed:\"\r\n          detail2={`${build.dram?.speed} Mhz`}\r\n          price={build.dram?.price}\r\n          link={build.dram?.link}\r\n          company={build.dram?.company}\r\n          img={build.dram?.img}\r\n        />\r\n        <Part\r\n          part=\"Storage\"\r\n          name={build.ssd?.name}\r\n          title1=\"Capacity:\"\r\n          detail1={`${build.ssd?.capacity} GB`}\r\n          title2=\"Type:\"\r\n          detail2={build.ssd?.type}\r\n          price={build.ssd?.price}\r\n          link={build.ssd?.link}\r\n          company={build.ssd?.company}\r\n          img={build.ssd?.img}\r\n        />\r\n        <Part\r\n          part=\"GPU\"\r\n          name={build.gpu?.name}\r\n          title1=\"VRAM:\"\r\n          detail1={`${build.gpu?.vram} GB`}\r\n          title2=\"Bus\"\r\n          detail2={`${build.gpu?.bus} bit`}\r\n          price={build.gpu?.price}\r\n          link={build.gpu?.link}\r\n          company={build.gpu?.aib}\r\n          img={build.gpu?.img}\r\n        />\r\n        <Part\r\n          part=\"Case\"\r\n          name={build.case?.name}\r\n          price={build.case?.price}\r\n          link={build.case?.link}\r\n          company={build.case?.company}\r\n          img={build.case?.img}\r\n        />\r\n        <Part\r\n          part=\"PowerSupply\"\r\n          name={build.psu?.name}\r\n          title1=\"Wattage:\"\r\n          detail1={`${build.psu?.wattage}W`}\r\n          title2=\"Efficiency:\"\r\n          detail2={build.psu?.rating}\r\n          price={build.psu?.price}\r\n          link={build.psu?.link}\r\n          company={build.psu?.company}\r\n          img={build.psu?.img}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BuildElab;\r\n","import React, { useState } from \"react\";\r\nimport \"./Build.css\";\r\nimport Header from \"./Header\";\r\nimport BuildCard from \"./BuildCard\";\r\nimport BuildElab from \"./BuildElab\";\r\n\r\nfunction Build() {\r\n  const [buildId, setBuildId] = useState(\"valueIntel\");\r\n  return (\r\n    <div className=\"build\">\r\n      <div className=\"build__header\">\r\n        <Header />\r\n      </div>\r\n      <div className=\"build__body\">\r\n        <div className=\"build__cards\">\r\n          <div\r\n            onClick={() => {\r\n              setBuildId(\"value\");\r\n            }}\r\n            id=\"value\"\r\n          >\r\n            <BuildCard docId=\"value\" />\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              setBuildId(\"valueIntel\");\r\n            }}\r\n            id=\"valueIntel\"\r\n          >\r\n            <BuildCard docId=\"valueIntel\" />\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              setBuildId(\"streaming\");\r\n            }}\r\n          >\r\n            <BuildCard docId=\"streaming\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"build__featured\">\r\n          <h1>\r\n            Selected <span>Build</span>\r\n          </h1>\r\n          <BuildElab id={buildId} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Build;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Build from \"./Build\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/build\">\n            <Build />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}